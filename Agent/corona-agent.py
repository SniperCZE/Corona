#!/usr/bin/python3
import os
import sys
sys.path.append('../libs')

import threading
import configparser
import socket
import coronaprotocol

version = '0.1'
cp = coronaprotocol.CoronaProtocol()

class agentServerThread (threading.Thread):
    """Thread for accepting messages from server. It's used for healthchecks, server status messages and commands"""

    host = None
    port = None

    def __init__(self):
        threading.Thread.__init__(self)

    def setAgentServerDetails(self, host, port):
        self.host = host
        self.port = int(port)

    def startAgentServer(self):
        agentServerSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        agentServerSocket.connect((self.host, self.port))
        agentServerSocket.listen(5)
        while True:
            remoteServer, addr = agentServerSocket.accept()
            msg=remoteServer.recv(4096)
            print('Received message from remote server: %s' % msg.decode('ascii'))


class agentClientThread (threading.Thread):
    """Thread for sending messages initialized by agent"""

    def __init__(self):
        threading.Thread.__init__(self)

    serverHost = ''
    serverPort = 0
    serverSocket = None

    def setServerDetails(self, host, port):
        """Settings of server details - hostname and port to connect"""
        self.serverHost = host
        self.serverPort = int(port)

    def connectToServer(self):
        """Makes connection to corona server"""
        self.serverSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.serverSocket.connect((self.serverHost, self.serverPort))

    def disconnectFromServer(self):
        """Disconnect agent from server. Agent should be connected only when needed"""
        self.serverSocket.close()

    def sendMessage(self, message):
        """Sends message generated by coronaprotocol to server and waits for response"""
        self.connectToServer()
        self.serverSocket.send(message.encode('ascii'))
        response = self.serverSocket.recv(4096)
        self.disconnectFromServer()
        return response.decode('ascii')




config = configparser.ConfigParser()
config.read('corona-agent.conf')

agentIp = config['Corona']['ListenAddress']
agentPort = config['Corona']['ListenPort']
serverHost = config['Corona']['CoronaServer']
serverPort = config['Corona']['CoronaServerPort']

# thread used to receiving messages sent directly from server
agentServerSocketThread = agentServerThread()
# @type agentServerSocketThread agentServerThread
agentServerSocketThread.setAgentServerDetails(agentIp, agentPort)
#agentServerSocketThread.startAgentServer()

# thread user for sending messages into server
agentClientSocketThread = agentClientThread()
# @type agentClientSocketThread agentClientThread
agentClientSocketThread.setServerDetails(serverHost, serverPort)
msg=agentClientSocketThread.sendMessage(cp.agentIsOnline(agentIp, agentPort, version))

print (msg)